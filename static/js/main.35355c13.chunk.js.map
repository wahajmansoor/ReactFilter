{"version":3,"sources":["component/todoreact/todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MA2HeA,EA9GF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EACQG,KAAKC,MAAMJ,GAGX,GAMwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAS,WACX,GAAKd,EAGA,GAAIA,GAAaY,EAClBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOP,EACd,2BAAUM,GAAV,IAAmBE,KAAMlB,IAEtBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEf,CACD,IAAMM,EAAgB,CAClBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SArBbsB,MAAM,yBAqDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,SACjC,4EAIJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,qBAAqBJ,UAAU,eAAeK,MAAOhC,EAAWiC,SAAW,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAC9IpB,EACG,mBAAGe,UAAU,uBAAuBS,QAAStB,IAE7C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAK/C,qBAAKa,UAAU,YAAf,SAEQnB,EAAMO,KAAI,SAACC,GACR,OACC,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACA,mBAAGA,UAAU,wBAAwBS,QAAS,kBAtDjE,SAACC,GACd,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GAgDoE2B,CAASxB,EAAQC,OACrE,mBAAGU,UAAU,2BAA2BS,QAAS,kBA7ClE,SAACC,GAChB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAC/B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GAyC8EE,CAAW3B,EAAQC,YAJ/CD,EAAQC,SAavD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QA/CnE,WACb3B,EAAS,KA8CO,SACI,0DCnGbmC,EARH,WACV,OACE,8BACI,cAAC,EAAD,OCNRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35355c13.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n    if(lists) {\r\n        return JSON.parse(lists);\r\n    }\r\n    else{\r\n        return [];\r\n    }\r\n }\r\n\r\nconst Todo = () => {\r\n    const [inputdata, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    // Add Item\r\n    const addItem =() =>{\r\n        if (!inputdata){\r\n            alert(\"Please fill the data\");\r\n        } \r\n        else if (inputdata && toggleButton){\r\n            setItems(\r\n                items.map((curElem) =>{\r\n                    if(curElem.id === isEditItem){\r\n                        return{...curElem, name: inputdata}\r\n                    }\r\n                    return curElem;\r\n                })\r\n            )\r\n            setInputData(\"\");\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        } \r\n        else {\r\n            const myNewInputData ={\r\n                id: new Date().getTime().toString(),\r\n                name: inputdata,\r\n            }\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    }\r\n\r\n    //Edit Item\r\n    const editItem = (index) => {\r\n        const item_todo_edited = items.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    // Delete Item\r\n    const deleteItem = (index) => {\r\n        const updatedItems = items.filter((curElem) =>{\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    // Remove All \r\n    const removeAll =() => {\r\n        setItems([]);\r\n    }\r\n\r\n    // Local Storage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n    }, [items])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"Logo\"/>\r\n                        <figcaption>\r\n                            Add Your List Here üëè\r\n                        </figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Enter item here...\" className=\"form-control\" value={inputdata} onChange= {(event) => setInputData(event.target.value)}/>\r\n                        {toggleButton ? (\r\n                            <i className=\"fa fa-marker add-btn\" onClick={addItem}></i>\r\n                        ) : (\r\n                            <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n                        )}\r\n                        \r\n                    </div>\r\n                    {/* show items */}\r\n                        <div className=\"showItems\">\r\n                            {\r\n                                items.map((curElem) => {\r\n                                   return(\r\n                                    <div className=\"eachItem\" key={curElem.id}>\r\n                                        <h3>{curElem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                        <i className=\"fas fa-marker add-btn\" onClick={() => editItem(curElem.id)}></i>\r\n                                        <i className=\"fas fa-trash-alt add-btn\" onClick={() => deleteItem(curElem.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                   )         \r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    {/* remove items */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                            <span>Check List</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react';\n//import Resturant from './component/Basics/Resturant';\n//import UseState from './component/Hooks/useState';\n//import UseEffect from './component/Hooks/useEffect';\n//import UseReducer from './component/Hooks/useReducer';\nimport Todo from './component/todoreact/todo';\n\nconst App = () => {\n  return (\n    <div>\n        <Todo />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}